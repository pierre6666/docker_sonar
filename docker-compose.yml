version: "3"

services:
  sonarqube:
    container_name: sonarqube
    #image: sonarqube:9.7.1-community
    image: mandanai/sonarqube-m1-mac:latest
    restart: always
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
      #SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true
      #SONAR_SEARCH_JAVAADDITIONALOPTS: "-Dbootstrap.system_call_filter=false"
    volumes:
      - ./sonarqube/extensions:/opt/sonarqube/extensions
      - ./sonarqube/logs:/opt/sonarqube/logs
      - ./sonarqube/data:/opt/sonarqube/data
      - ./sonarqube/conf:/opt/sonarqube/conf
    ports:
      - "9000:9000"
    networks:
      - sonar-network
  db:
    image: postgres:15.1
    restart: always
    environment:
      POSTGRES_DB: sonar
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    ports:
      - '5432:5432'
    volumes:
      - ./sonarqube/postgresql/:/var/lib/postgresql
      - ./sonarqube/datasql/:/var/lib/postgresql/data:rw
    networks:
      - sonar-network
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - sonar-network
    restart: unless-stopped
networks:
  sonar-network:
    driver: bridge
volumes:
  pgadmin: